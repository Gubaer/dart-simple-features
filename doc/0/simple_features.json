{"dependencies":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"out/ReleaseIA32/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe [Iterable] interface allows to get an [Iterator] out of an\n[Iterable] object.\n\nThis interface is used by the for-in construct to iterate over an\n[Iterable] object.\nThe for-in construct takes an [Iterable] object at the right-hand\nside, and calls its [iterator] method to get an [Iterator] on it.\n\nA user-defined class that implements the [Iterable] interface can\nbe used as the right-hand side of a for-in construct.\n","uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"Iterable","id":"Iterable","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"comment":"\nReturns a lazy [Iterable] where each element [:e:] of [this] is replaced\nby the result of [:f(e):].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [f] will\nnot be invoked. The transformed elements will not be cached. Iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [f] multiple times on the same element.\n","name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"51","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns a lazy [Iterable] with all elements that satisfy the\npredicate [f].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [f] will\nnot be invoked. Iterating will not cache results, and thus iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [f] multiple times on the same element.\n","name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"63","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"comment":"\nExpand each element of this [Iterable] into zero or more elements.\n\nThe resulting Iterable will run through the elements returned\nby [f] for each element of this, in order.\n\nThe returned [Iterable] is lazy, and will call [f] for each element\nof this every time it's iterated.\n","name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"74","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether the collection contains an element equal to [element].\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApplies the function [f] to each element of this collection.\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"84","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.\n\nExample of calculating the sum of an iterable:\n\n    iterable.reduce((value, element) => value + element);\n\n","name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"95","kind":"param"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"95","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"95","kind":"method"},{"comment":"\nReduces a collection to a single value by iteratively combining each\nelement of the collection with an existing value using the provided\nfunction.\n\nUse [initialValue] as the initial value, and the function [combine] to\ncreate a new value from the previous one and an element.\n\nExample of calculating the sum of an iterable:\n\n    iterable.fold(0, (prev, element) => prev + element);\n\n","name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"previousValue","id":"previousValue","line":"111","kind":"param"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"111","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"111","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if every elements of this collection satisify the\npredicate [f]. Returns false otherwise.\n","name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"117","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nConverts each element to a [String] and concatenates the strings.\n\nConverts each element to a [String] by calling [Object.toString] on it.\nThen concatenates the strings, optionally separated by the [separator]\nstring.\n","name":"join","id":"join1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"separator","id":"separator","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if one element of this collection satisfies the\npredicate [f]. Returns false otherwise.\n","name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"136","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"List"},"comment":"\nCreates a [List] containing the elements of this [Iterable].\n\nThe elements will be in iteration order. The list is fixed-length\nif [growable] is false.\n","name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Set"},"comment":"\nCreates a [Set] containing the elements of this [Iterable].\n","name":"toSet","id":"toSet0()","line":"149","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] with at most [n] elements.\n\nThe returned [Iterable] may contain fewer than [n] elements, if [this]\ncontains fewer than [n] elements.\n","name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"170","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that stops once [test] is not satisfied anymore.\n\nThe filtering happens lazily. Every new [Iterator] of the returned\n[Iterable] will start iterating over the elements of [this].\nWhen the iterator encounters an element [:e:] that does not satisfy [test],\nit discards [:e:] and moves into the finished state. That is, it will not\nask or provide any more elements.\n","name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"181","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"181","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that skips the first [n] elements.\n\nIf [this] has fewer than [n] elements, then the resulting [Iterable] will\nbe empty.\n","name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that skips elements while [test] is satisfied.\n\nThe filtering happens lazily. Every new [Iterator] of the returned\n[Iterable] will iterate over all elements of [this].\nAs long as the iterator's elements do not satisfy [test] they are\ndiscarded. Once an element satisfies the [test] the iterator stops testing\nand uses every element unconditionally.\n","name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"200","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"200","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the first element that satisfies the given predicate [f].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is `null`, a [StateError] is\nthrown.\n","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"231","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"231","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the last element that satisfies the given predicate [f].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is [:null:], a [StateError] is\nthrown.\n","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"240","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the single element that satisfies [f]. If no or more than one\nelement match then a [StateError] is thrown.\n","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"246","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the [index]th element.\n\nIf [this] [Iterable] has fewer than [index] elements throws a\n[RangeError].\n\nNote: if [this] does not have a deterministic iteration order then the\nfunction may simply return any element without any iteration if there are\nat least [index] elements in [this].\n","name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"258","kind":"method"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterator"},"comment":"\nReturns an [Iterator] that iterates over this [Iterable] object.\n","name":"iterator","id":"iterator","line":"39","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the number of elements in [this].\n\nCounting all elements may be involve running through all elements and can\ntherefore be slow.\n","name":"length","id":"length","line":"157","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if there is no element in this collection.\n","name":"isEmpty","id":"isEmpty","line":"162","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the first element.\n\nIf [this] is empty throws a [StateError]. Otherwise this method is\nequivalent to [:this.elementAt(0):]\n","name":"first","id":"first","line":"208","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the last element.\n\nIf [this] is empty throws a [StateError].\n","name":"last","id":"last","line":"215","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the single element in [this].\n\nIf [this] is empty or has more than one element throws a [StateError].\n","name":"single","id":"single","line":"222","kind":"property"},{"name":"Iterable","id":"Iterable0()","line":"20","kind":"constructor"},{"comment":"\nCreate an [Iterable] that generates its elements dynamically.\n\nThe [Iterators] created by the [Iterable] will count from\nzero to [:count - 1:] while iterating, and call [generator]\nwith that index to create the next value.\n\nAs an [Iterable], [:new Iterable.generate(n, generator)):] is equivalent to\n[:const [0, ..., n - 1].map(generator):]\n","name":"Iterable.generate","id":"Iterable.generate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"generator","id":"generator","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/int","name":"int"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/iterable.dart","name":"index","id":"index","line":"32","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"32","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"out/ReleaseIA32/dart-sdk/lib/core/errors.dart","name":"Error","id":"Error","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nSafely convert a value to a [String] description.\n\nThe conversion is guaranteed to not throw, so it won't use the object's\ntoString method.\n","name":"safeToString","id":"safeToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"16","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_objectToString","isPrivate":true,"id":"_objectToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"34","kind":"method"},{"name":"Error","id":"Error0()","line":"8","kind":"constructor"}],"line":"7","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInterface used by types that have an intrinsic ordering.\n","uri":"out/ReleaseIA32/dart-sdk/lib/core/comparable.dart","name":"Comparable","id":"Comparable","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nCompares this object to another [Comparable]\n\nReturns a value like a [Comparator] when comparing [:this:] to [other].\n\nMay throw an [ArgumentError] if [other] is of a type that\nis not comparable to [:this:].\n","name":"compareTo","id":"compareTo1()","children":[{"ref":{"refId":"dart.core/Comparable/T","name":"T"},"name":"other","id":"other","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nCompare one comparable to another.\n\nThis utility function is used as the default comparator\nfor the [List] sort function.\n","name":"compare","id":"compare2()","children":[{"ref":{"refId":"dart.core/Comparable","name":"Comparable"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/Comparable","name":"Comparable"},"name":"b","id":"b","kind":"param"}],"line":"43","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"26","kind":"class"}],"line":"5","kind":"library"},{"uri":"out/ReleaseIA32/dart-sdk/lib/collection/collection.dart","name":"dart:collection","id":"dart.collection","children":[{"isAbstract":true,"interfaces":[{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Iterable"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis [Iterable] mixin implements all [Iterable] members except `iterator`.\n\nAll other methods are implemented in terms of `iterator`.\n","uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"IterableMixin","id":"IterableMixin","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","kind":"param"}],"kind":"functiontype"}],"kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Iterable"},"name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"15","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"17","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"27","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"value","id":"value","line":"31","kind":"param"},{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"31","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"31","kind":"method"},{"name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"previousValue","id":"previousValue","line":"44","kind":"param"},{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"44","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"44","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"50","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"join","id":"join1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"separator","id":"separator","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"element","id":"element","line":"75","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"List"},"name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"82","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Set"},"name":"toSet","id":"toSet0()","line":"85","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Iterable"},"name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Iterable"},"name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"value","id":"value","line":"102","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Iterable"},"name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/IterableMixin/E","name":"E"}],"name":"Iterable"},"name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"value","id":"value","line":"110","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"value","id":"value","line":"142","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"value","id":"value","line":"151","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"151","kind":"method"},{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"uri":"out/ReleaseIA32/dart-sdk/lib/collection/iterable.dart","name":"value","id":"value","line":"166","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"183","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"87","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"96","kind":"property"},{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"first","id":"first","line":"114","kind":"property"},{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"last","id":"last","line":"122","kind":"property"},{"ref":{"refId":"dart.collection/IterableMixin/E","name":"E"},"name":"single","id":"single","line":"134","kind":"property"},{"name":"E","id":"E","kind":"typeparam"}],"line":"12","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///home/karl/repositories/dart-simple-features/lib/simple_features.dart","id":"simple_features","children":[{"comment":"\nParses GeoJSON.\n\nReturns a [Geometry], a [Feature], or a [FeatureCollection].\n\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/geojson.dart","name":"parseGeoJson","id":"parseGeoJson1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"geoJson","id":"geoJson","kind":"param"}],"line":"12","kind":"method"},{"returnType":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nParses the WKT string [wkt] and replies the parsed [Geometry].\n\n[wkt] must not be null.\n\nThrows a [WKTError] if parsing fails.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"parseWKT","id":"parseWKT1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"10","kind":"method"},{"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/util.dart","name":"_require","isPrivate":true,"id":"_require2()","children":[{"name":"cond","id":"cond","kind":"param"},{"isOptional":true,"name":"msg","id":"msg","kind":"param"}],"line":"3","kind":"method"},{"isFinal":true,"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multipolygon.dart","name":"_EMPTY_MULTI_POLYGON","isPrivate":true,"id":"_EMPTY_MULTI_POLYGON","line":"34","kind":"variable"},{"isFinal":true,"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multilinestring.dart","name":"_EMPTY_MULTI_LINE_STRING","isPrivate":true,"id":"_EMPTY_MULTI_LINE_STRING","line":"3","kind":"variable"},{"isFinal":true,"comment":"the singleton empty line string","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/linestring.dart","name":"_EMPTY_LINESTRING","isPrivate":true,"id":"_EMPTY_LINESTRING","line":"4","kind":"variable"},{"isFinal":true,"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multipoint.dart","name":"_EMPTY_MULTIPOINT","isPrivate":true,"id":"_EMPTY_MULTIPOINT","line":"3","kind":"variable"},{"isFinal":true,"comment":"the singleton empty geometry collection","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/geometry_collection.dart","name":"_EMPTY_GEOMETRY_COLLECTION","isPrivate":true,"id":"_EMPTY_GEOMETRY_COLLECTION","line":"4","kind":"variable"},{"superclass":{"refId":"simple_features/Object_IterableMixin","name":"Object_IterableMixin"},"comment":"\nA [FeatureCollection] isn't a standard class in the SFS.\n\nIt represents a collection of [Features] and is mainly used to\ndeserialized GeoJSON objects with `type: \"FeatureCollection\"`.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/feature.dart","name":"FeatureCollection","id":"FeatureCollection","children":[{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"simple_features/Feature","name":"Feature"}],"name":"Iterator"},"name":"iterator","id":"iterator","line":"64","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Feature","name":"Feature"}],"name":"List"},"name":"_features","isPrivate":true,"id":"_features","line":"51","kind":"variable"},{"comment":"\nCreates a new feature collection with [features].\n\n[features] is option. If present, if may be null or empty, in which\ncases an empty feature collection is created.\n","name":"FeatureCollection","id":"FeatureCollection1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/Feature","name":"Feature"}],"name":"Iterable"},"isOptional":true,"defaultValue":"null","name":"features","id":"features","kind":"param"}],"line":"59","kind":"constructor"}],"line":"50","kind":"class"},{"interfaces":[{"refId":"simple_features/Feature","name":"Feature"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/feature.dart","name":"_FeatureImpl","isPrivate":true,"id":"_FeatureImpl","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"properties","id":"properties","line":"40","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"geometry","id":"geometry","line":"41","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"_properties","isPrivate":true,"id":"_properties","line":"31","kind":"variable"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"_geometry","isPrivate":true,"id":"_geometry","line":"32","kind":"variable"},{"name":"_FeatureImpl","id":"_FeatureImpl2()","children":[{"initializedField":{"refId":"simple_features/_FeatureImpl/_geometry","name":"_geometry"},"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"_geometry","isPrivate":true,"id":"_geometry","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"defaultValue":"null","name":"properties","id":"properties","kind":"param"}],"line":"34","kind":"constructor"}],"line":"30","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [Feature] isn't a standard class in the SFS.\n\nIt represents an arbirtray object with a set of non-spatial\nproperties and one dedicated spatial property called [geometry].\n\nIt is is mainly used to\ndeserialized GeoJSON objects with `type: \"Feature\"`.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/feature.dart","name":"Feature","id":"Feature","children":[{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"geometry","id":"geometry","line":"26","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"properties","id":"properties","line":"27","kind":"property"},{"comment":"\nCreates a feature with a specific [geometry] and an (optional) set\nof properties.\n\n[geometry] must not be null, otherwise throws an [ArgumentError].\n\n[properties] are optional, and if present, they can be null or empty.\n","name":"Feature","id":"Feature2()","children":[{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"geometry","id":"geometry","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"defaultValue":"null","name":"properties","id":"properties","kind":"param"}],"line":"22","kind":"constructor"}],"line":"13","kind":"class"},{"superclass":{"refId":"simple_features/PolyhedralSurface","name":"PolyhedralSurface"},"comment":"\nA TIN (triangulated irregular network) is a [PolyhedralSurface] consisting\nonly of [Triangle] patches.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/polyhedral_surface.dart","name":"Tin","id":"Tin","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"133","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_wktName","isPrivate":true,"id":"_wktName","line":"134","kind":"property"},{"name":"Tin","id":"Tin1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Polygon","name":"Polygon"}],"name":"List"},"name":"patches","id":"patches","kind":"param"}],"line":"113","kind":"constructor"},{"comment":"\nCreates an empty tin.\n","name":"Tin.empty","id":"Tin.empty0()","line":"118","kind":"constructor"},{"comment":"\nCreates a new Tin from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [Tin].\n","name":"Tin.wkt","id":"Tin.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"126","kind":"constructor"}],"line":"111","kind":"class"},{"superclass":{"refId":"simple_features/Geometry_IterableMixin__GeometryContainerMixin","name":"Geometry_IterableMixin__GeometryContainerMixin"},"comment":"\nA PolyhedralSurface is a contiguous collection of polygons, which share\ncommon boundary segments.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/polyhedral_surface.dart","name":"PolyhedralSurface","id":"PolyhedralSurface","children":[{"returnType":{"refId":"simple_features/Polygon","name":"Polygon"},"comment":"\nFrom the SFS: \"Returns a polygon in this surface, the order is arbitrary.\"\n\nSee also [elementAt]\n","name":"patchN","id":"patchN1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","line":"59","kind":"param"}],"line":"58","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"86","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the number of including polygons\n\nSee also [length]\n","name":"numPatches","id":"numPatches","line":"50","kind":"property"},{"ref":{"refId":"simple_features/MultiPolygon","name":"MultiPolygon"},"comment":"\nReturns the collection of polygons in this surface that bounds the given\npolygon “p” for any polygon “p” in the surface.\n","name":"boundingPolygons","id":"boundingPolygons","line":"65","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true  if the polygon closes on itself, and thus has no boundary\nand encloses a solid\n","name":"isClosed","id":"isClosed","line":"74","kind":"property"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"simple_features/Polygon","name":"Polygon"}],"name":"Iterator"},"name":"iterator","id":"iterator","line":"79","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"82","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"83","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_wktName","isPrivate":true,"id":"_wktName","line":"85","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Polygon","name":"Polygon"}],"name":"List"},"name":"_patches","isPrivate":true,"id":"_patches","line":"10","kind":"variable"},{"comment":"\nCreates a polyhedral surface with the polygons [patches].\n\nIf [patches] is null or empty, an empty polyhedral surface is\ncreated.\n","name":"PolyhedralSurface","id":"PolyhedralSurface1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Polygon","name":"Polygon"}],"name":"List"},"name":"patches","id":"patches","kind":"param"}],"line":"18","kind":"constructor"},{"comment":"\nCreates an empty polyhedral surface.\n","name":"PolyhedralSurface.empty","id":"PolyhedralSurface.empty0()","line":"30","kind":"constructor"},{"comment":"\nCreates a new polyhedralsurface from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [PolyhedralSurface].\n","name":"PolyhedralSurface.wkt","id":"PolyhedralSurface.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"38","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"simple_features/MultiSurface","name":"MultiSurface"},"comment":"\nA MultiPolygon is a MultiSurface whose elements are [Polygon]s.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multipolygon.dart","name":"MultiPolygon","id":"MultiPolygon","children":[{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","line":"98","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","line":"98","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","line":"98","kind":"param"}],"line":"97","kind":"method"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"boundary","id":"boundary","line":"76","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"81","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"82","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"name":"centroid","id":"centroid","line":"85","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"name":"pointOnSurface","id":"pointOnSurface","line":"89","kind":"property"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"area","id":"area","line":"93","kind":"property"},{"comment":"\nCreates a multipolygon.\n\nFor polygons, a set of geometric invariants should hold, see\nthe SFS:\n\n* the interiors of two polygons in this multi polygon may not intersect\n* the boundaries of two polygons may not \"cross\" and if they touch, then\n  only at a finite number of points\n* a multipolygon must not have cut lines, spikes or punctures\n\nNote, that none of these invariants is currently enforced when a\npolygon is created.\n","name":"MultiPolygon","id":"MultiPolygon1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/Polygon","name":"Polygon"}],"name":"Iterable"},"name":"polygons","id":"polygons","kind":"param"}],"line":"55","kind":"constructor"},{"comment":"\nCreates an empty multipolygon.\n","name":"MultiPolygon.empty","id":"MultiPolygon.empty0()","line":"60","kind":"constructor"},{"comment":"\nCreates a new multipolygon from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [MultiPolygon].\n","name":"MultiPolygon.wkt","id":"MultiPolygon.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"68","kind":"constructor"}],"line":"39","kind":"class"},{"isAbstract":true,"superclass":{"refId":"simple_features/GeometryCollection","name":"GeometryCollection"},"comment":"\nA MultiSurface is a 2-dimensional [GeometryCollection] whose elements\nare [Surface]s, all using coordinates from the same coordinate reference\nsystem.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multipolygon.dart","name":"MultiSurface","id":"MultiSurface","children":[{"ref":{"refId":"simple_features/Point","name":"Point"},"comment":"\nThe mathematical centroid for this [Surface] as a [Point]. The result\nis not guaranteed to be on this [Surface].\n\n","name":"centroid","id":"centroid","line":"17","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"comment":"\nA [Point] guaranteed to be on this [Surface].\n","name":"pointOnSurface","id":"pointOnSurface","line":"23","kind":"property"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nThe area of this [Surface], as measured in the spatial reference system\nof this [Surface].\n","name":"area","id":"area","line":"30","kind":"property"},{"name":"MultiSurface","id":"MultiSurface1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/Surface","name":"Surface"}],"name":"Iterable"},"name":"surfaces","id":"surfaces","kind":"param"}],"line":"10","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"simple_features/Polygon","name":"Polygon"},"comment":"\nA Triangle is a polygon with 3 distinct, non-collinear vertices and no\ninterior boundary.\n\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/polygon.dart","name":"Triangle","id":"Triangle","children":[{"comment":"\nCreates a triangle with the [exterior].\n\n[exterior] must be a non-null, closed linestring with exactly three\ndistinct, non-colienar points.\n\nThrows [ArgumentError] if the preconditions aren't met.\n","name":"Triangle","id":"Triangle1()","children":[{"ref":{"refId":"simple_features/LineString","name":"LineString"},"name":"exterior","id":"exterior","kind":"param"}],"line":"203","kind":"constructor"}],"line":"193","kind":"class"},{"superclass":{"refId":"simple_features/Surface","name":"Surface"},"comment":"\nA Polygon is a planar Surface defined by 1 exterior boundary and 0 or\nmore interior boundaries. Each interior boundary defines a hole in the\nPolygon.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/polygon.dart","name":"Polygon","id":"Polygon","children":[{"returnType":{"refId":"simple_features/LineString","name":"LineString"},"comment":"\nReplies the n-th interior ring.\n\nThrows a [RangeError] if [n] is out of range\n","name":"interiorRingN","id":"interiorRingN1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","line":"122","kind":"param"}],"line":"121","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","line":"161","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","line":"161","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","line":"161","kind":"param"}],"line":"160","kind":"method"},{"name":"_writeWKT","isPrivate":true,"id":"_writeWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"170","kind":"method"},{"ref":{"refId":"simple_features/LineString","name":"LineString"},"comment":"\nThe exterior ring of this polygon.\n\nReplies an empty linestring if this polygon is empty.\n","name":"exteriorRing","id":"exteriorRing","line":"97","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/LineString","name":"LineString"}],"name":"Iterable"},"comment":"\nThe interior rings. Replies an empty iterable, if\nthis polygon doesn't have interior rings.\n","name":"interiorRings","id":"interiorRings","line":"106","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"the number of interior rings","name":"numInteriorRing","id":"numInteriorRing","line":"111","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"124","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReplies true if this polygon isn't empty and if both the\nexterior and each of the interior rings are 3D.\n","name":"is3D","id":"is3D","line":"130","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReplies true if this polygon isn't empty and if both the\nexterior and each of the interior rings are measured.\n","name":"isMeasured","id":"isMeasured","line":"141","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"148","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"boundary","id":"boundary","line":"150","kind":"property"},{"ref":{"refId":"simple_features/LineString","name":"LineString"},"name":"_exterior","isPrivate":true,"id":"_exterior","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/LineString","name":"LineString"}],"name":"List"},"name":"_interiors","isPrivate":true,"id":"_interiors","line":"11","kind":"variable"},{"comment":"\nCreates a new polygon.\n\n[exteriorRing] must not be null. If [exteriorRing] is empty,\n[interiorRings] must be null, the empty list, or consist of\nempty [LinearRing]s only.\n\n[interiorRings] can be null. If it is a non-empty list, then it\nmust not contain null values.\n\nNote: According to the SFS, both the exterior and the interior must\nbe valid [LinearRing]s, i.e. they must be simple, closed [LineString]s.\nExterior and interior rings must not cross and a polygon must not have\ncuts, spikes, punctures (see the SFS for examples). These restrictions\nare currently not enforced when a [Polygon] is created.\n\nThrows [ArgumentError] if one of the preconditions is violated.\n","name":"Polygon","id":"Polygon2()","children":[{"ref":{"refId":"simple_features/LineString","name":"LineString"},"name":"exteriorRing","id":"exteriorRing","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/LineString","name":"LineString"}],"name":"Iterable"},"name":"interiorRings","id":"interiorRings","kind":"param"}],"line":"31","kind":"constructor"},{"comment":"\nCreates a new empty polygon.\n","name":"Polygon.empty","id":"Polygon.empty0()","line":"57","kind":"constructor"},{"comment":"\nCreates a new point from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [Polygon].\n","name":"Polygon.wkt","id":"Polygon.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"65","kind":"constructor"},{"comment":"\nCreates a triangle with the [exterior].\n\n[exterior] must be a non-null, closed linestring with exactly three\ndistinct, non-colienar points.\n\nThrows [ArgumentError] if the preconditions aren't met.\n","name":"Polygon.triangle","id":"Polygon.triangle1()","children":[{"ref":{"refId":"simple_features/LineString","name":"LineString"},"name":"exterior","id":"exterior","kind":"param"}],"line":"80","kind":"constructor"}],"line":"8","kind":"class"},{"isAbstract":true,"superclass":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nA [Surface] is a 2-dimensional geometric object.\n\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/surface.dart","name":"Surface","id":"Surface","children":[{"name":"dimension","id":"dimension","line":"8","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"comment":"\nThe mathematical centroid for this [Surface] as a [Point]. The result\nis not guaranteed to be on this [Surface].\n\n","name":"centroid","id":"centroid","line":"15","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"comment":"\nA [Point] guaranteed to be on this [Surface].\n","name":"pointOnSurface","id":"pointOnSurface","line":"21","kind":"property"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nThe area of this [Surface], as measured in the spatial reference system\nof this [Surface].\n","name":"area","id":"area","line":"28","kind":"property"}],"line":"6","kind":"class"},{"superclass":{"refId":"simple_features/GeometryCollection","name":"GeometryCollection"},"comment":"\nA MultiLineString is a MultiCurve whose elements are [LineString]s.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multilinestring.dart","name":"MultiLineString","id":"MultiLineString","children":[{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"88","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"36","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"37","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nThis multilinestring is closed if all child line strings are\nclosed.\n","name":"isClosed","id":"isClosed","line":"43","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nReplies the spatial length of this multilinestring.\n","name":"spatialLength","id":"spatialLength","line":"48","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nThe boundary of a [MultiLineString] consists of the boundary\npoints of the child geometries which occur an odd number of\ntimes in the boundaries.\n","name":"boundary","id":"boundary","line":"58","kind":"property"},{"comment":"\nCreates a multilinestring for a collection of [linestrings].\n\nIf [linestrings] is null or empty, an empty [MultiLineString]\nis created.\n","name":"MultiLineString","id":"MultiLineString1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/LineString","name":"LineString"}],"name":"Iterable"},"name":"linestrings","id":"linestrings","kind":"param"}],"line":"15","kind":"constructor"},{"comment":"\nCreates an empty multilinestring.\n","name":"MultiLineString.empty","id":"MultiLineString.empty0()","line":"20","kind":"constructor"},{"comment":"\nCreates a new multilinestring from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [MultiLineString].\n","name":"MultiLineString.wkt","id":"MultiLineString.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"28","kind":"constructor"}],"line":"8","kind":"class"},{"superclass":{"refId":"simple_features/LineString","name":"LineString"},"comment":"\nA [LinearRing] is a [LineString] that is both closed and simple.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/linestring.dart","name":"LinearRing","id":"LinearRing","children":[{"name":"LinearRing","id":"LinearRing1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"points","id":"points","kind":"param"}],"line":"207","kind":"constructor"}],"line":"206","kind":"class"},{"superclass":{"refId":"simple_features/LineString","name":"LineString"},"comment":"\nA Line is a [LineString] with exactly 2 [Point]s.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/linestring.dart","name":"Line","id":"Line","children":[{"name":"Line","id":"Line1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"points","id":"points","kind":"param"}],"line":"200","kind":"constructor"}],"line":"199","kind":"class"},{"superclass":{"refId":"simple_features/Geometry_IterableMixin__GeometryContainerMixin","name":"Geometry_IterableMixin__GeometryContainerMixin"},"comment":"\nA LineString is a curve with linear interpolation between points.\n\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/linestring.dart","name":"LineString","id":"LineString","children":[{"name":"_init","isPrivate":true,"id":"_init1()","children":[{"name":"points","id":"points","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReplies the number of points in this linestring.\n\nSee also [length]\n","name":"numPoints","id":"numPoints0()","line":"103","kind":"method"},{"returnType":{"refId":"simple_features/Point","name":"Point"},"comment":"\nReplies the n-th point this linestring.\n\nSee also [elementAt]\n","name":"pointN","id":"pointN1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","line":"112","kind":"param"}],"line":"111","kind":"method"},{"name":"_writeWKT","isPrivate":true,"id":"_writeWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"161","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"174","kind":"method"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"Iterator"},"name":"iterator","id":"iterator","line":"92","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"95","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"96","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nReplies the (spatial) length of this line string.\n","name":"spatialLength","id":"spatialLength","line":"117","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"comment":"\nReplies the start point of this linestring.\n\nSee also the Dart'ish property [first].\n\nThrows a [StateError] if this linestring is empty.\n","name":"startPoint","id":"startPoint","line":"130","kind":"property"},{"ref":{"refId":"simple_features/Point","name":"Point"},"comment":"\nReplies the end point of this linestring.\n\nSee also the Dart'ish property [last].\n\nThrows a [StateError] if this linestring is empty.\n","name":"endPoint","id":"endPoint","line":"140","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReplies true if this linestring isn't empty and its\nfirst and last points are equal (with respect to the xy-coordinates)\n","name":"isClosed","id":"isClosed","line":"147","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReplies true if this linestring is closed and simple.\n\n","name":"isRing","id":"isRing","line":"157","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nThe boundary is empty if this linestring [isEmpty]\nor [isClosed]. Otherwise it consists of a\n[MultiPoint] with the two end points.\n","name":"boundary","id":"boundary","line":"188","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"_points","isPrivate":true,"id":"_points","line":"13","kind":"variable"},{"comment":"\nCreates a new linestring.\n\nCreates an empty linestring if [points] is null or empty.\n\nThrows an [ArgumentError] if [points] contains only one\npoint or if it contains null values or empty points.\n","name":"LineString","id":"LineString1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"points","id":"points","kind":"param"}],"line":"35","kind":"constructor"},{"comment":"\nCreates a new line.\n\nA line is a linestring with exactly two non-null, non-empty,\nnon-equal [points].\n\nThrows an [ArgumentError] if one of these conditions isn't met.\n","name":"LineString.line","id":"LineString.line1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"points","id":"points","kind":"param"}],"line":"47","kind":"constructor"},{"comment":"\nCreates a new linear ring.\n\nA linear ring is a linestring that is both closed and simple.\nAs a consequence, it must have at least four nodes.\n\nThrows an [ArgumentError] if the [points] passed in do not represent\na linear ring.\n","name":"LineString.ring","id":"LineString.ring1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"points","id":"points","kind":"param"}],"line":"64","kind":"constructor"},{"comment":"\nCreates a new linestring from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [LineString].\n","name":"LineString.wkt","id":"LineString.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"79","kind":"constructor"},{"comment":"\nCreates an empty linestring.\n","name":"LineString.empty","id":"LineString.empty0()","line":"90","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"simple_features/GeometryCollection","name":"GeometryCollection"},"comment":"\nA MultiPoint is a 0-dimensional GeometryCollection. The elements of a\nMultiPoint are restricted to Points. The Points are not connected or\nordered in any semantically important way.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/multipoint.dart","name":"MultiPoint","id":"MultiPoint","children":[{"name":"_computeIsSimple","isPrivate":true,"id":"_computeIsSimple0()","line":"53","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"94","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"48","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"49","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isValid","id":"isValid","line":"50","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA MultiPoint is simple if no two points are identical.\n\nThe value of this property is computed upon first access\nand then cached. Subsequent reads of the property\nefficiently reply the cached value.\n","name":"isSimple","id":"isSimple","line":"84","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"The boundary of a [MultiPoint] is an empty [GeometryCollection]","name":"boundary","id":"boundary","line":"91","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isSimple","isPrivate":true,"id":"_isSimple","line":"52","kind":"variable"},{"comment":"\nCreates a new multipoint object [points].\n\n[points] must not include null values, otherwise throws an\n[ArgumentError].\n\nif [points] is null or empty, then an empty multipoint object\nis created.\n\n[points] don't have to be homogeneous with respect to the z- and\nm-coordinate. You can mix xy-, and xy{z,m}-points in a multipoint.\nHowever, [is3D] only returns true, iff all points have a z-coordinate.\nSimilary, [isMeasured] only returns true, iff all points have an\nm-value.\n","name":"MultiPoint","id":"MultiPoint1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Point","name":"Point"}],"name":"List"},"name":"points","id":"points","kind":"param"}],"line":"27","kind":"constructor"},{"comment":"\nCreates an empty multipoint object.\n","name":"MultiPoint.empty","id":"MultiPoint.empty0()","line":"32","kind":"constructor"},{"comment":"\nCreates a new multipoint from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [MultiPoint].\n","name":"MultiPoint.wkt","id":"MultiPoint.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"40","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/geometry_collection.dart","name":"_GeometryContainerMixin","isPrivate":true,"id":"_GeometryContainerMixin","children":[{"name":"_computeIs3D","isPrivate":true,"id":"_computeIs3D0()","line":"115","kind":"method"},{"name":"_computeIsMeasured","isPrivate":true,"id":"_computeIsMeasured0()","line":"138","kind":"method"},{"returnType":{"refId":"simple_features/_Envelope","name":"_Envelope"},"name":"_computeEnvelope","isPrivate":true,"id":"_computeEnvelope0()","line":"160","kind":"method"},{"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"167","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA collection of geometries is considered 3D if *every* child geometry\nhas a non-null z-component.\n\nThe value of this property is computed upon first access and then\ncached. Subsequent reads of the property efficiently reply the cached\nvalue.\n","name":"is3D","id":"is3D","line":"131","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA collection of geometries is considered *measured* if *every* child\ngeometry has an m-component.\n\nThe value of this property is computed upon first access and then\ncached. Subsequent reads of the property efficiently reply the cached\nvalue.\n","name":"isMeasured","id":"isMeasured","line":"154","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_is3D","isPrivate":true,"id":"_is3D","line":"114","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isMeasured","isPrivate":true,"id":"_isMeasured","line":"137","kind":"variable"}],"line":"113","kind":"class"},{"superclass":{"refId":"simple_features/Geometry_IterableMixin__GeometryContainerMixin","name":"Geometry_IterableMixin__GeometryContainerMixin"},"comment":"\nA [GeometryCollection] is a geometric object that is a collection of\nsome number of geometric objects.\n\nIt implements the accesor methods [numGeometries] and [getGeometryN]\nwhich are specified in the SFS. In addition, it provides the more\nDart'ish [length] property and an overloaded index operator. It also\nimplements the [Iterable] interface.\n\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/geometry_collection.dart","name":"GeometryCollection","id":"GeometryCollection","children":[{"returnType":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nReplies the <em>n</em>-th geometry in this collection.\n","name":"getGeometryN","id":"getGeometryN1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","line":"65","kind":"param"}],"line":"64","kind":"method"},{"isOperator":true,"comment":"\nReplies the <em>n</em>-th geometry in this collection.\n\nThis is the Dart'ish implemenation of `getGeometryN()` using\noperator overloading.\n","name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","line":"74","kind":"param"}],"line":"73","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","line":"89","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","line":"89","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","line":"89","kind":"param"}],"line":"88","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReplies the number of geometries in this collection.\n\nThis getter is equivaled to the method `getNumGeometries()`\nin the SFS, but see also [length].\n","name":"numGeometries","id":"numGeometries","line":"58","kind":"property"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"simple_features/Geometry","name":"Geometry"}],"name":"Iterator"},"comment":"the iterator to access the geometry objects","name":"iterator","id":"iterator","line":"77","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA geometry collection is simple if all its child geometries are\nsimple.\n","name":"isSimple","id":"isSimple","line":"86","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"109","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"110","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"simple_features/Geometry","name":"Geometry"}],"name":"List"},"name":"_geometries","isPrivate":true,"id":"_geometries","line":"19","kind":"variable"},{"comment":"\nCreates a geometry collection given a collection of\n[geometries].\n","name":"GeometryCollection","id":"GeometryCollection1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"simple_features/Geometry","name":"Geometry"}],"name":"Iterable"},"name":"geometries","id":"geometries","kind":"param"}],"line":"25","kind":"constructor"},{"comment":"\nCreates an empty geometry collection.\n","name":"GeometryCollection.empty","id":"GeometryCollection.empty0()","line":"36","kind":"constructor"},{"comment":"\nCreates a new geometry collection from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [GeometryCollection].\n","name":"GeometryCollection.wkt","id":"GeometryCollection.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"44","kind":"constructor"}],"line":"16","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"_WKTWriter","isPrivate":true,"id":"_WKTWriter","children":[{"name":"lparen","id":"lparen0()","line":"682","kind":"method"},{"name":"rparen","id":"rparen0()","line":"683","kind":"method"},{"name":"comma","id":"comma0()","line":"684","kind":"method"},{"name":"blank","id":"blank0()","line":"685","kind":"method"},{"name":"newline","id":"newline0()","line":"686","kind":"method"},{"name":"position","id":"position1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"pos","id":"pos","kind":"param"}],"line":"687","kind":"method"},{"name":"incIdent","id":"incIdent0()","line":"692","kind":"method"},{"name":"decIdent","id":"decIdent0()","line":"693","kind":"method"},{"name":"ident","id":"ident0()","line":"697","kind":"method"},{"name":"coordinates","id":"coordinates1()","children":[{"ref":{"refId":"simple_features/Point","name":"Point"},"name":"point","id":"point","kind":"param"}],"line":"699","kind":"method"},{"name":"ordinateSpecification","id":"ordinateSpecification2()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"713","kind":"method"},{"name":"empty","id":"empty0()","line":"723","kind":"method"},{"name":"write","id":"write1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"725","kind":"method"},{"ref":{"refId":"dart.core/StringSink","name":"StringSink"},"isFinal":true,"name":"_sink","isPrivate":true,"id":"_sink","line":"677","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_ident","isPrivate":true,"id":"_ident","line":"678","kind":"variable"},{"name":"_WKTWriter","id":"_WKTWriter1()","children":[{"initializedField":{"refId":"simple_features/_WKTWriter/_sink","name":"_sink"},"ref":{"refId":"dart.core/StringSink","name":"StringSink"},"name":"_sink","isPrivate":true,"id":"_sink","kind":"param"}],"line":"680","kind":"constructor"}],"line":"676","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"_WKTParser","isPrivate":true,"id":"_WKTParser","children":[{"name":"parseNumbers","id":"parseNumbers1()","children":[{"name":"n","id":"n","kind":"param"}],"line":"360","kind":"method"},{"name":"parseCoordSpecificationOrEmpty","id":"parseCoordSpecificationOrEmpty0()","line":"382","kind":"method"},{"comment":"\npre: token is 'point'\npost: token is ')'\n","name":"parsePoint","id":"parsePoint0()","line":"404","kind":"method"},{"name":"advance","id":"advance0()","line":"415","kind":"method"},{"name":"ensureKeyword","id":"ensureKeyword1()","children":[{"name":"kw","id":"kw","kind":"param"}],"line":"416","kind":"method"},{"name":"advanceMandatory","id":"advanceMandatory0()","line":"417","kind":"method"},{"name":"parseCoordSpecification","id":"parseCoordSpecification0()","line":"422","kind":"method"},{"comment":"\npre: token is a number\npost: token is the token following the coordSpec.ncoord parsed numbers\n","name":"parsePointText","id":"parsePointText1()","children":[{"name":"coordSpec","id":"coordSpec","kind":"param"}],"line":"434","kind":"method"},{"comment":"\npre: token is 'multipoint'\npost: token is ')'\n","name":"parseMultiPoint","id":"parseMultiPoint0()","line":"450","kind":"method"},{"comment":"\npre: token is 'linestring'\npost: token is ')'\n","name":"parseLineString","id":"parseLineString0()","line":"483","kind":"method"},{"comment":"\npre: token  is  '('\npost: token is  ')'\n","name":"parseLineStringText","id":"parseLineStringText1()","children":[{"name":"coordSpec","id":"coordSpec","kind":"param"}],"line":"496","kind":"method"},{"name":"parseCommaSeperatedList","id":"parseCommaSeperatedList1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"parse","id":"parse","children":[{"uri":"out/ReleaseIA32/dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"513","kind":"method"},{"comment":"\npre: token is 'multilinestring'\npost: token is ')'\n","name":"parseMultiLineString","id":"parseMultiLineString0()","line":"534","kind":"method"},{"comment":"\n pre: token is '('  (...) (...)\n                ^\n post: token is '('  (...) (...) ')'\n                                  ^\n","name":"parsePolygonText","id":"parsePolygonText1()","children":[{"name":"coordSpec","id":"coordSpec","kind":"param"}],"line":"556","kind":"method"},{"name":"parsePolygon","id":"parsePolygon0()","line":"565","kind":"method"},{"name":"parsePolygonList","id":"parsePolygonList1()","children":[{"name":"coordSpec","id":"coordSpec","kind":"param"}],"line":"574","kind":"method"},{"comment":"\npre: token is 'multipolygon'\n","name":"parseMultiPolygon","id":"parseMultiPolygon0()","line":"595","kind":"method"},{"comment":"\npre: token is 'polyhedralsurface'\n","name":"parsePolyhedralSurface","id":"parsePolyhedralSurface0()","line":"609","kind":"method"},{"comment":"\npre: token is 'tin'\n","name":"parseTin","id":"parseTin0()","line":"623","kind":"method"},{"comment":"\npre: token is one of the keywords\n","name":"parseWKTObject","id":"parseWKTObject0()","line":"637","kind":"method"},{"comment":"\npre: token is 'geometrycollection'\n","name":"parseGeometryCollection","id":"parseGeometryCollection0()","line":"658","kind":"method"},{"name":"tokenizer","id":"tokenizer","line":"353","kind":"variable"},{"name":"token","id":"token","line":"354","kind":"variable"},{"name":"_WKTParser","id":"_WKTParser1()","children":[{"name":"source","id":"source","kind":"param"}],"line":"356","kind":"constructor"}],"line":"352","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"_CoordSpecification","isPrivate":true,"id":"_CoordSpecification","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"withMZ","id":"withMZ","line":"349","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"withZ","id":"withZ","line":"325","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"withM","id":"withM","line":"326","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"ncoord","id":"ncoord","line":"327","kind":"variable"},{"name":"_CoordSpecification","id":"_CoordSpecification2()","children":[{"initializedField":{"refId":"simple_features/_CoordSpecification/withZ","name":"withZ"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"initializedField":{"refId":"simple_features/_CoordSpecification/withM","name":"withM"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"328","kind":"constructor"},{"name":"_CoordSpecification.xy","id":"_CoordSpecification.xy0()","line":"334","kind":"constructor"},{"name":"_CoordSpecification.from","id":"_CoordSpecification.from1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"336","kind":"constructor"}],"line":"324","kind":"class"},{"interfaces":[{"refId":"dart.core/Error","name":"Error"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"WKTError","id":"WKTError","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"320","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"message","id":"message","line":"318","kind":"variable"},{"name":"WKTError","id":"WKTError1()","children":[{"initializedField":{"refId":"simple_features/WKTError/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"message","id":"message","kind":"param"}],"line":"319","kind":"constructor"}],"line":"317","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"_WKTTokenizer","isPrivate":true,"id":"_WKTTokenizer","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isDigit","id":"isDigit1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isLowerCaseLetter","id":"isLowerCaseLetter1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isUpperCaseLetter","id":"isUpperCaseLetter1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isLetter","id":"isLetter1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"109","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isWS","id":"isWS1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isParen","id":"isParen1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isDQuote","id":"isDQuote1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isSpecial","id":"isSpecial1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isComma","id":"isComma1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isSign","id":"isSign1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isDot","id":"isDot1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"119","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isE","id":"isE1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isDelimiter","id":"isDelimiter1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isLParen","id":"isLParen1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isRParen","id":"isRParen1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"c","id":"c","kind":"param"}],"line":"125","kind":"method"},{"isStatic":true,"name":"errorToken","id":"errorToken1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"128","kind":"method"},{"isStatic":true,"name":"numericLiteralToken","id":"numericLiteralToken1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"129","kind":"method"},{"isStatic":true,"name":"eosToken","id":"eosToken0()","line":"131","kind":"method"},{"isStatic":true,"name":"wsToken","id":"wsToken1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"132","kind":"method"},{"isStatic":true,"name":"keywordToken","id":"keywordToken1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"133","kind":"method"},{"isStatic":true,"name":"commaToken","id":"commaToken1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"134","kind":"method"},{"isStatic":true,"name":"quotedNameToken","id":"quotedNameToken1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"135","kind":"method"},{"name":"advance","id":"advance0()","line":"156","kind":"method"},{"name":"currentToken","id":"currentToken0()","line":"169","kind":"method"},{"name":"consumeToken","id":"consumeToken0()","line":"171","kind":"method"},{"name":"consumeWhiteSpace","id":"consumeWhiteSpace0()","line":"178","kind":"method"},{"name":"consumeComma","id":"consumeComma0()","line":"187","kind":"method"},{"name":"consumeKeyword","id":"consumeKeyword0()","line":"194","kind":"method"},{"name":"consumeQuotedName","id":"consumeQuotedName0()","line":"208","kind":"method"},{"name":"scanUnsignedInteger","id":"scanUnsignedInteger0()","line":"225","kind":"method"},{"name":"scanSignedInteger","id":"scanSignedInteger0()","line":"232","kind":"method"},{"name":"scanExactNumericLiteral","id":"scanExactNumericLiteral0()","line":"241","kind":"method"},{"name":"scanUnsignedNumericLiteral","id":"scanUnsignedNumericLiteral0()","line":"255","kind":"method"},{"name":"scanSignedNumericLiteral","id":"scanSignedNumericLiteral0()","line":"264","kind":"method"},{"name":"consumeSignedNumericLiteral","id":"consumeSignedNumericLiteral0()","line":"272","kind":"method"},{"name":"consumeLParen","id":"consumeLParen0()","line":"283","kind":"method"},{"name":"consumeRParen","id":"consumeRParen0()","line":"290","kind":"method"},{"returnType":{"refId":"simple_features/_WKTToken","name":"_WKTToken"},"name":"next","id":"next0()","line":"297","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"cur","id":"cur","line":"167","kind":"property"},{"isFinal":true,"isStatic":true,"name":"CC_0","id":"CC_0","line":"84","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_9","id":"CC_9","line":"85","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_a","id":"CC_a","line":"86","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_z","id":"CC_z","line":"87","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_A","id":"CC_A","line":"88","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_Z","id":"CC_Z","line":"89","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_SPACE","id":"CC_SPACE","line":"90","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_CR","id":"CC_CR","line":"91","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_LF","id":"CC_LF","line":"92","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_LPAREN","id":"CC_LPAREN","line":"93","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_RPAREN","id":"CC_RPAREN","line":"94","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_DQUOTE","id":"CC_DQUOTE","line":"95","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_QUOTE","id":"CC_QUOTE","line":"96","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_MINUS","id":"CC_MINUS","line":"97","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_PLUS","id":"CC_PLUS","line":"98","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_UNDERSCORE","id":"CC_UNDERSCORE","line":"99","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_PERIOD","id":"CC_PERIOD","line":"100","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_COMMA","id":"CC_COMMA","line":"101","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_DOT","id":"CC_DOT","line":"102","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_E","id":"CC_E","line":"103","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"CC_e","id":"CC_e","line":"104","kind":"variable"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Iterable"},"name":"source","id":"source","line":"138","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"head","id":"head","line":"139","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"eos","id":"eos","line":"140","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"skipWhitespace","id":"skipWhitespace","line":"141","kind":"variable"},{"name":"_WKTTokenizer","id":"_WKTTokenizer2()","children":[{"name":"source","id":"source","kind":"param"},{"initializedField":{"refId":"simple_features/_WKTTokenizer/skipWhitespace","name":"skipWhitespace"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"skipWhitespace","id":"skipWhitespace","kind":"param"}],"line":"143","kind":"constructor"}],"line":"83","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"_WKTToken","isPrivate":true,"id":"_WKTToken","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"41","kind":"method"},{"name":"ensureKeyword","id":"ensureKeyword1()","children":[{"isOptional":true,"defaultValue":"null","name":"kw","id":"kw","kind":"param"}],"line":"51","kind":"method"},{"name":"ensureLParen","id":"ensureLParen0()","line":"60","kind":"method"},{"name":"ensureRParen","id":"ensureRParen0()","line":"65","kind":"method"},{"name":"ensureNumber","id":"ensureNumber0()","line":"70","kind":"method"},{"name":"ensureNotEOS","id":"ensureNotEOS0()","line":"75","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"matchKeyword","id":"matchKeyword1()","children":[{"name":"kw","id":"kw","kind":"param"}],"line":"80","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isKeyword","id":"isKeyword","line":"44","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isLParen","id":"isLParen","line":"45","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isRParen","id":"isRParen","line":"46","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isComma","id":"isComma","line":"47","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isNumber","id":"isNumber","line":"48","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEOS","id":"isEOS","line":"49","kind":"property"},{"isFinal":true,"name":"type","id":"type","line":"38","kind":"variable"},{"isFinal":true,"name":"value","id":"value","line":"39","kind":"variable"},{"name":"_WKTToken","id":"_WKTToken2()","children":[{"initializedField":{"refId":"simple_features/_WKTToken/type","name":"type"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"simple_features/_WKTToken/value","name":"value"},"name":"value","id":"value","kind":"param"}],"line":"40","kind":"constructor"}],"line":"37","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/wkt.dart","name":"_WKTTokenType","isPrivate":true,"id":"_WKTTokenType","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"34","kind":"method"},{"isStatic":true,"name":"QUOTED_NAME","id":"QUOTED_NAME","line":"18","kind":"variable"},{"isStatic":true,"name":"KEYWORD","id":"KEYWORD","line":"19","kind":"variable"},{"isStatic":true,"name":"NUMERIC_LITERAL","id":"NUMERIC_LITERAL","line":"20","kind":"variable"},{"isStatic":true,"name":"WHITESPACE","id":"WHITESPACE","line":"21","kind":"variable"},{"isStatic":true,"name":"LPAREN","id":"LPAREN","line":"22","kind":"variable"},{"isStatic":true,"name":"RPAREN","id":"RPAREN","line":"23","kind":"variable"},{"isStatic":true,"name":"LBRACKET","id":"LBRACKET","line":"24","kind":"variable"},{"isStatic":true,"name":"RBRACKET","id":"RBRACKET","line":"25","kind":"variable"},{"isStatic":true,"name":"ERROR","id":"ERROR","line":"26","kind":"variable"},{"isStatic":true,"name":"EOS","id":"EOS","line":"27","kind":"variable"},{"isStatic":true,"name":"COMMA","id":"COMMA","line":"28","kind":"variable"},{"isFinal":true,"name":"_type","isPrivate":true,"id":"_type","line":"30","kind":"variable"},{"isFinal":true,"name":"_displayName","isPrivate":true,"id":"_displayName","line":"31","kind":"variable"},{"name":"_WKTTokenType._","isPrivate":true,"id":"_WKTTokenType._2()","children":[{"initializedField":{"refId":"simple_features/_WKTTokenType/_type","name":"_type"},"name":"_type","isPrivate":true,"id":"_type","kind":"param"},{"initializedField":{"refId":"simple_features/_WKTTokenType/_displayName","name":"_displayName"},"name":"_displayName","isPrivate":true,"id":"_displayName","kind":"param"}],"line":"32","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"simple_features/Geometry","name":"Geometry"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/point.dart","name":"Point","id":"Point","children":[{"name":"_writeCoordinates","isPrivate":true,"id":"_writeCoordinates3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"79","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","line":"98","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","line":"98","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","line":"98","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"simple_features/_Envelope","name":"_Envelope"},"name":"_computeEnvelope","isPrivate":true,"id":"_computeEnvelope0()","line":"126","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReplies true if the (x,y)-coordinates of this point are\nequal to the (x,y)-coordinates of [other].\n\nReplies false if [other] is null.\n","name":"equals2D","id":"equals2D1()","children":[{"ref":{"refId":"simple_features/Point","name":"Point"},"name":"other","id":"other","kind":"param"}],"line":"138","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"73","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"is3D","id":"is3D","line":"75","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isMeasured","id":"isMeasured","line":"77","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nThe boundary of a point is the empty [GeometryCollection].\n\nNote: According to the SFS the boundary of a [Point] is the\nempty set. Like the Java Topology Suite we reply an empty\n[GeometryCollection], not an empty [Point].\n","name":"boundary","id":"boundary","line":"120","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isSimple","id":"isSimple","line":"121","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"geometryType","id":"geometryType","line":"122","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"dimension","id":"dimension","line":"123","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"comment":"the x-coordinate. null, if this point [isEmpty]","name":"x","id":"x","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"comment":"the y-coordinate. null, if this point [isEmpty]","name":"y","id":"y","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"comment":"the z coordinate. null, if missing","name":"z","id":"z","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isFinal":true,"comment":"the measurement value. null, if missing","name":"m","id":"m","line":"15","kind":"variable"},{"comment":"\nCreates an empty point.\n\n[x], [y], [z], and [m] of an empty point are null.\n","name":"Point.empty","id":"Point.empty0()","line":"22","kind":"constructor"},{"comment":"\nCreates a point with coordinates [x], [y], and\n(optionally) [z]. The point can be a assigned an\noptional measurement value [m].\n","name":"Point","id":"Point4()","children":[{"initializedField":{"refId":"simple_features/Point/x","name":"x"},"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"initializedField":{"refId":"simple_features/Point/y","name":"y"},"ref":{"refId":"dart.core/num","name":"num"},"name":"y","id":"y","kind":"param"},{"initializedField":{"refId":"simple_features/Point/z","name":"z"},"isNamed":true,"ref":{"refId":"dart.core/num","name":"num"},"isOptional":true,"name":"z","id":"z","kind":"param"},{"initializedField":{"refId":"simple_features/Point/m","name":"m"},"isNamed":true,"ref":{"refId":"dart.core/num","name":"num"},"isOptional":true,"name":"m","id":"m","kind":"param"}],"line":"29","kind":"constructor"},{"comment":"\nCreates a new point from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid representation of\na [Point].\n","name":"Point.wkt","id":"Point.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"40","kind":"constructor"},{"comment":"\nCreates a new point from a list of point values.\n\n[values] is a list with either 2 or 4 elements, otherwise an\n[ArgumentError] is thrown.\n\n* [x,y] - an xy-point.\n* [x,y,z,m] - an xy-point with an z- and/or m-coordinate, if\n  the 3d and/or the 4th element isn't null.\n\nx and y must be a [num], otherwise an [ArgumentError] is thrown.\nz and m must be a [num] or null, otherwise an [ArgumentError] is thrown.\n","name":"Point.from","id":"Point.from1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/num","name":"num"}],"name":"List"},"name":"values","id":"values","kind":"param"}],"line":"61","kind":"constructor"}],"line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe abstract base class for all geometries.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/geometry.dart","name":"Geometry","id":"Geometry","children":[{"isSetter":true,"comment":"\nthe Spatial Reference System ID for this geometric object.\n","name":"SRID=","id":"SRID=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"simple_features/_Envelope","name":"_Envelope"},"name":"_computeEnvelop","isPrivate":true,"id":"_computeEnvelop0()","line":"93","kind":"method"},{"name":"_writeTaggedWKT","isPrivate":true,"id":"_writeTaggedWKT3()","children":[{"name":"writer","id":"writer","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withZ","id":"withZ","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"withM","id":"withM","kind":"param"}],"line":"106","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns 1 true if this geometric object is the empty Geometry.\n","name":"isEmpty","id":"isEmpty","line":"30","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if this geometric object has z coordinate values.\n","name":"is3D","id":"is3D","line":"36","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if this geometric object has m coordinate values.\n","name":"isMeasured","id":"isMeasured","line":"42","kind":"property"},{"ref":{"refId":"simple_features/Geometry","name":"Geometry"},"comment":"\nReturns the closure of the combinatorial boundary of this geometric object\n","name":"boundary","id":"boundary","line":"48","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\n Returns true if this geometric object has no anomalous geometric points,\n such as self intersection or self tangency.\n","name":"isSimple","id":"isSimple","line":"55","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the name of the instantiable subtype of Geometry of which this\ngeometric object is an instantiable member. The name of the subtype of\nGeometry is returned as a string.\n","name":"geometryType","id":"geometryType","line":"63","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe inherent dimension of this geometric object, which must be less than\nor equal to the coordinate dimension. In non-homogeneous collections,\nthis will return the largest topological dimension of the contained objects.\n","name":"dimension","id":"dimension","line":"71","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the Spatial Reference System ID for this geometric object.\n","name":"SRID","id":"SRID","line":"77","kind":"property"},{"ref":{"refId":"simple_features/_Envelope","name":"_Envelope"},"name":"_envelope","isPrivate":true,"id":"_envelope","line":"85","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nA WKT representation of the geometry\n","name":"asText","id":"asText","line":"98","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_srid","isPrivate":true,"id":"_srid","line":"8","kind":"variable"},{"ref":{"refId":"simple_features/_Envelope","name":"_Envelope"},"name":"_cachedEnvelope","isPrivate":true,"id":"_cachedEnvelope","line":"92","kind":"variable"},{"comment":"\nCreates a geometry from the WKT string [wkt].\n\nThrows a [WKTError] if [wkt] isn't a valid WKT geometry.\n","name":"Geometry.wkt","id":"Geometry.wkt1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"wkt","id":"wkt","kind":"param"}],"line":"15","kind":"constructor"},{"comment":"\nCreates a geometry from a GeoJSON string [json].\n\nThrows a  [FormatError] if [json] isn't valid.\n","name":"Geometry.geojson","id":"Geometry.geojson1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"json","id":"json","kind":"param"}],"line":"23","kind":"constructor"},{"name":"Geometry","id":"Geometry0()","line":"25","kind":"constructor"}],"line":"6","kind":"class"},{"interfaces":[{"refId":"dart.core/Comparable","name":"Comparable"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/util.dart","name":"ComparableMixin","id":"ComparableMixin","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"8","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"<","id":"<1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"9","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"<=","id":"<=1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"10","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":">","id":">1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":">=","id":">=1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"12","kind":"method"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/envelope.dart","name":"_Envelope","isPrivate":true,"id":"_Envelope","children":[{"returnType":{"refId":"simple_features/Geometry","name":"Geometry"},"name":"toGeometry","id":"toGeometry0()","line":"17","kind":"method"},{"name":"growTo","id":"growTo1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"25","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"15","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"minx","id":"minx","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"miny","id":"miny","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"maxx","id":"maxx","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"maxy","id":"maxy","line":"7","kind":"variable"},{"name":"_Envelope","id":"_Envelope4()","children":[{"initializedField":{"refId":"simple_features/_Envelope/minx","name":"minx"},"ref":{"refId":"dart.core/num","name":"num"},"name":"minx","id":"minx","kind":"param"},{"initializedField":{"refId":"simple_features/_Envelope/miny","name":"miny"},"ref":{"refId":"dart.core/num","name":"num"},"name":"miny","id":"miny","kind":"param"},{"initializedField":{"refId":"simple_features/_Envelope/maxx","name":"maxx"},"ref":{"refId":"dart.core/num","name":"num"},"name":"maxx","id":"maxx","kind":"param"},{"initializedField":{"refId":"simple_features/_Envelope/maxy","name":"maxy"},"ref":{"refId":"dart.core/num","name":"num"},"name":"maxy","id":"maxy","kind":"param"}],"line":"9","kind":"constructor"},{"name":"_Envelope.empty","id":"_Envelope.empty0()","line":"11","kind":"constructor"},{"name":"_Envelope.collapsed","id":"_Envelope.collapsed2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"minx","id":"minx","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"miny","id":"miny","kind":"param"}],"line":"13","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/karl/repositories/dart-simple-features/lib/src/direct_position.dart","name":"DirectPosition2D","id":"DirectPosition2D","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"name":"compareTo","id":"compareTo1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"9","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"14","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"<","id":"<1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"<=","id":"<=1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":">","id":">1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":">=","id":">=1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"28","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"hashCode","id":"hashCode","line":"16","kind":"property"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"name":"x","id":"x","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"isFinal":true,"name":"y","id":"y","line":"5","kind":"variable"},{"name":"DirectPosition2D","id":"DirectPosition2D2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y","id":"y","kind":"param"}],"line":"6","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUsed to annotate methods or properties in this SFS implementation with the\noriginal method name from the SFS.\n","uri":"file:///home/karl/repositories/dart-simple-features/lib/src/annotations.dart","name":"specification","id":"specification","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"name","id":"name","line":"8","kind":"variable"},{"name":"specification","id":"specification1()","children":[{"initializedField":{"refId":"simple_features/specification/name","name":"name"},"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"name","id":"name","kind":"param"}],"line":"9","kind":"constructor"}],"line":"7","kind":"class"}],"line":"1","kind":"library"}